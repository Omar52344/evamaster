{"version":3,"sources":["containers/navs/Breadcrumb.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","components/common/CustomSelectInput.js","hooks/use-mousetrap.js","../node_modules/reactstrap/es/ButtonDropdown.js","containers/pages/Pagination.js","containers/pages/ListPageHeading.js","containers/pages/AddNewModal.js","containers/pages/ContextMenuContainer.js","containers/pages/DataListView.js","containers/pages/ImageListView.js","containers/pages/ThumbListView.js","containers/pages/ListPageListing.js","views/app/pages/product/data-list.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","className","map","key","active","to","BreadcrumbContainer","heading","propTypes","tag","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","children","node","Breadcrumb","props","Tag","ListTag","label","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","defaultProps","bool","BreadcrumbItem","undefined","CustomSelectInput","customProps","autoCorrect","autoCapitalize","Input","handlerKey","handlerCallback","actionRef","useRef","current","useEffect","mousetrap","bind","evt","combo","preventDefault","unbind","ButtonDropdown","Dropdown","group","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","onClick","injectIntl","intl","displayMode","changeDisplayMode","handleChangeSelectAll","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","endIndex","selectedItemsLength","itemsLength","onSearchKey","orderOptions","pageSizes","toggleModal","useState","dropdownSplitOpen","setDropdownSplitOpen","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","color","size","isOpen","toggle","type","checked","onChange","caret","right","href","order","column","name","placeholder","onKeyPress","e","AddNewModal","modalOpen","categories","wrapClassName","backdrop","components","classNamePrefix","options","outline","ContextMenuContainer","onContextMenu","onContextMenuClick","onShow","detail","data","action","memo","product","isSelect","collect","onCheckItem","Card","event","classnames","title","category","date","Badge","statusColor","pill","status","CustomInput","sm","lg","xl","CardImg","top","alt","src","img","CardBody","Row","CardSubtitle","CardText","items","selectedItems","includes","getIndex","value","arr","prop","apiUrl","servicePath","DataListPages","isLoaded","setIsLoaded","setDisplayMode","setCurrentPage","setSelectedPageSize","setSelectedOrderOption","setModalOpen","setTotalItemCount","setTotalPage","search","setSearch","setSelectedItems","setItems","lastChecked","setLastChecked","a","axios","get","then","res","replace","totalItem","fetchData","isToggle","document","activeElement","blur","useMousetrap","find","target","toLowerCase","tagName","parentElement","selectedList","shiftKey","newItems","start","end","slice","Math","min","max","item","Array","from","Set","console","log","clickedProductId"],"mappings":"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","file":"static/js/product-data-list.949bafb7.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../navs/Breadcrumb';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nimport {\n  DataListIcon,\n  ThumbListIcon,\n  ImageListIcon,\n} from '../../components/svg';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  toggleModal,\n  heading,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n\n          <div className=\"text-zero top-right-button-container\">\n            <Button\n              color=\"primary\"\n              size=\"lg\"\n              className=\"top-right-button\"\n              onClick={() => toggleModal()}\n            >\n              <IntlMessages id=\"pages.add-new\" />\n            </Button>\n            {'  '}\n            <ButtonDropdown\n              isOpen={dropdownSplitOpen}\n              toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n            >\n              <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                <CustomInput\n                  className=\"custom-checkbox mb-0 d-inline-block\"\n                  type=\"checkbox\"\n                  id=\"checkAll\"\n                  checked={selectedItemsLength >= itemsLength}\n                  onChange={() => handleChangeSelectAll(true)}\n                  label={\n                    <span\n                      className={`custom-control-label ${\n                        selectedItemsLength > 0 &&\n                        selectedItemsLength < itemsLength\n                          ? 'indeterminate'\n                          : ''\n                      }`}\n                    />\n                  }\n                />\n              </div>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                className=\"dropdown-toggle-split btn-lg\"\n              />\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n          <Breadcrumb match={match} />\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'list' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('list')}\n              >\n                <DataListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  <IntlMessages id=\"pages.orderby\" />\n                  {selectedOrderOption.label}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {orderOptions.map((order, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changeOrderBy(order.column)}\n                      >\n                        {order.label}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                <input\n                  type=\"text\"\n                  name=\"keyword\"\n                  id=\"search\"\n                  placeholder={messages['menu.search']}\n                  onKeyPress={(e) => onSearchKey(e)}\n                />\n              </div>\n            </div>\n            <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport {\n  CustomInput,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../components/common/CustomSelectInput';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst AddNewModal = ({ modalOpen, toggleModal, categories }) => {\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"pages.add-new-modal-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label>\n          <IntlMessages id=\"pages.product-name\" />\n        </Label>\n        <Input />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.category\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={categories}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.description\" />\n        </Label>\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.status\" />\n        </Label>\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio\"\n          name=\"customRadio\"\n          label=\"ON HOLD\"\n        />\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio2\"\n          name=\"customRadio\"\n          label=\"PROCESSED\"\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"pages.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={toggleModal}>\n          <IntlMessages id=\"pages.submit\" />\n        </Button>{' '}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddNewModal;\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\n\nconst ContextMenuContainer = ({ onContextMenu, onContextMenuClick }) => {\n  return (\n    <ContextMenu id=\"menu_id\" onShow={(e) => onContextMenu(e, e.detail.data)}>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'copy' }}>\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'move' }}>\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'delete' }}>\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\n      </MenuItem>\n    </ContextMenu>\n  );\n};\n\nexport default ContextMenuContainer;\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst DataListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(DataListView);\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ThumbListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <NavLink to={`?p=${product.id}`} className=\"d-flex\">\n            <img\n              alt={product.title}\n              src={product.img}\n              className=\"list-thumbnail responsive border-0 card-img-left\"\n            />\n          </NavLink>\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ThumbListView);\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport Pagination from './Pagination';\nimport ContextMenuContainer from './ContextMenuContainer';\nimport DataListView from './DataListView';\nimport ImageListView from './ImageListView';\nimport ThumbListView from './ThumbListView';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  return (\n    <Row>\n      {items.map((product) => {\n        if (displayMode === 'imagelist') {\n          return (\n            <ImageListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        if (displayMode === 'thumblist') {\n          return (\n            <ThumbListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        return (\n          <DataListView\n            key={product.id}\n            product={product}\n            isSelect={selectedItems.includes(product.id)}\n            onCheckItem={onCheckItem}\n            collect={collect}\n          />\n        );\n      })}\n      <Pagination\n        currentPage={currentPage}\n        totalPage={totalPage}\n        onChangePage={(i) => onChangePage(i)}\n      />\n      <ContextMenuContainer\n        onContextMenuClick={onContextMenuClick}\n        onContextMenu={onContextMenu}\n      />\n    </Row>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport { servicePath } from '../../../../constants/defaultValues';\n\nimport ListPageHeading from '../../../../containers/pages/ListPageHeading';\nimport AddNewModal from '../../../../containers/pages/AddNewModal';\nimport ListPageListing from '../../../../containers/pages/ListPageListing';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst apiUrl = `${servicePath}/cakes/paging`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [4, 8, 12, 20];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\n\nconst DataListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('list');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(8);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    async function fetchData() {\n      axios\n        .get(\n          `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\n        )\n        .then((res) => {\n          return res.data;\n        })\n        .then((data) => {\n          setTotalPage(data.totalPage);\n          setItems(data.data.map(x=>{ return { ...x,img : x.img.replace(\"img/\",\"img/products/\")}}));\n          setSelectedItems([]);\n          setTotalItemCount(data.totalItem);\n          setIsLoaded(true);\n        });\n    }\n    fetchData();\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"menu.data-list\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n        />\n        <AddNewModal\n          modalOpen={modalOpen}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          categories={categories}\n        />\n        <ListPageListing\n          items={items}\n          displayMode={displayMode}\n          selectedItems={selectedItems}\n          onCheckItem={onCheckItem}\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n          onChangePage={setCurrentPage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default DataListPages;\n"],"sourceRoot":""}