{"version":3,"sources":["views/app/ui/components/editors.js","containers/navs/Breadcrumb.js"],"names":["quillModules","toolbar","list","indent","quillFormats","EditorsUi","match","useState","textQuillStandart","setTextQuillStandart","textQuillBubble","setTextQuillBubble","xxs","heading","className","id","theme","value","onChange","val","modules","formats","getMenuTitle","sub","adminRoot","getUrl","path","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer"],"mappings":"mNAaMA,G,eAAe,CACnBC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CACE,CAAEC,KAAM,WACR,CAAEA,KAAM,UACR,CAAEC,OAAQ,MACV,CAAEA,OAAQ,OAEZ,CAAC,OAAQ,SACT,CAAC,YAICC,EAAe,CACnB,SACA,OACA,SACA,YACA,SACA,aACA,OACA,SACA,SACA,OACA,SAqDaC,UAlDG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACmBC,mBAAS,IAD5B,mBACxBC,EADwB,KACLC,EADK,OAEeF,mBAAS,IAFxB,mBAExBG,EAFwB,KAEPC,EAFO,KAI/B,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,MACT,kBAAC,IAAD,CAAYC,QAAQ,eAAeP,MAAOA,IAC1C,kBAAC,IAAD,CAAWQ,UAAU,WAGzB,kBAAC,IAAD,CAAKA,UAAU,QACb,kBAAC,IAAD,CAAOF,IAAI,MACT,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcG,GAAG,4BAEnB,kBAAC,IAAD,CACEC,MAAM,OACNC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAASV,EAAqBU,IACxCC,QAASpB,EACTqB,QAASjB,QAOnB,kBAAC,IAAD,CAAKU,UAAU,QACb,kBAAC,IAAD,CAAOF,IAAI,MACT,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcG,GAAG,0BAEnB,kBAAC,IAAD,CACEC,MAAM,SACNC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAASR,EAAmBQ,a,iCClFtD,8DAOMG,EAAe,SAACC,GACpB,MAAG,IAAIA,IAAMC,IAAkB,kBAAC,IAAD,CAAcT,GAAG,cACzC,kBAAC,IAAD,CAAcA,GAAE,eAAUQ,MAG7BE,EAAS,SAACC,EAAMH,EAAKI,GACzB,OAAOD,EAAKE,MAAML,GAAK,GAAKA,GAgBxBM,EAAkB,SAAC,GAAe,IAChCH,EAD+B,EAAZpB,MACNoB,KAAKI,OAAO,GAC3BC,EAAQL,EAAKE,MAAM,KAIvB,OAHIG,EAAMA,EAAMC,OAAS,GAAGC,QAAQ,MAAQ,IAC1CF,EAAQA,EAAMG,QAAO,SAACC,GAAD,OAA2B,IAApBA,EAAEF,QAAQ,SAGtC,oCACE,kBAAC,IAAD,CAAYnB,UAAU,iEACnBiB,EAAMK,KAAI,SAACb,EAAKI,GACf,OACE,kBAAC,IAAD,CAAgBU,IAAKV,EAAOW,OAAQP,EAAMC,SAAWL,EAAQ,GAC1DI,EAAMC,SAAWL,EAAQ,EACxB,kBAAC,IAAD,CAASY,GAAE,WAAMd,EAAOC,EAAMH,KAC3BD,EAAaC,IAGhBD,EAAaC,UAUdiB,IAxCa,SAAC,GAAwB,IAAtB3B,EAAqB,EAArBA,QAASP,EAAY,EAAZA,MACtC,OACE,oCACGO,GACC,4BACE,kBAAC,IAAD,CAAcE,GAAIF,KAGtB,kBAACgB,EAAD,CAAiBvB,MAAOA","file":"static/js/components-editors.fc7867b7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Card, CardBody, CardTitle } from 'reactstrap';\nimport ReactQuill from 'react-quill';\nimport {\n  Colxx,\n  Separator,\n} from '../../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-quill/dist/quill.bubble.css';\n\nconst quillModules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [\n      { list: 'ordered' },\n      { list: 'bullet' },\n      { indent: '-1' },\n      { indent: '+1' },\n    ],\n    ['link', 'image'],\n    ['clean'],\n  ],\n};\n\nconst quillFormats = [\n  'header',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n];\n\nconst EditorsUi = ({ match }) => {\n  const [textQuillStandart, setTextQuillStandart] = useState('');\n  const [textQuillBubble, setTextQuillBubble] = useState('');\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.editors\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"editors.quill-standart\" />\n              </CardTitle>\n              <ReactQuill\n                theme=\"snow\"\n                value={textQuillStandart}\n                onChange={(val) => setTextQuillStandart(val)}\n                modules={quillModules}\n                formats={quillFormats}\n              />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"editors.quill-bubble\" />\n              </CardTitle>\n              <ReactQuill\n                theme=\"bubble\"\n                value={textQuillBubble}\n                onChange={(val) => setTextQuillBubble(val)}\n              />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default EditorsUi;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n"],"sourceRoot":""}