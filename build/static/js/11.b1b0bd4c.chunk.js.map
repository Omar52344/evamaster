{"version":3,"sources":["containers/navs/Breadcrumb.js","components/charts/util.js","components/charts/config.js","components/charts/Area.js","components/charts/Bar.js","components/charts/Doughnut.js","components/charts/Line.js","components/charts/Pie.js","components/charts/PolarArea.js","components/charts/Radar.js","components/charts/Scatter.js","components/charts/SmallLine.js","helpers/ThemeColors.js","data/charts.js","components/cards/RadialProgressCard.js","containers/dashboards/WebsiteVisitsChartCard.js","containers/dashboards/SmallLineCharts.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","className","map","key","active","to","BreadcrumbContainer","heading","chartTooltip","backgroundColor","ThemeColors","foregroundColor","titleFontColor","primaryColor","borderColor","separatorColor","borderWidth","bodyFontColor","bodySpacing","xPadding","yPadding","cornerRadius","centerTextPlugin","afterDatasetsUpdate","chart","beforeDraw","width","chartArea","right","height","bottom","ctx","restore","activeLabel","data","labels","activeValue","datasets","dataset","meta","_meta","Object","keys","total","activePercentage","parseFloat","toFixed","legend","legendItems","hidden","pointAvailable","pointIndex","pointDataIndex","font","fillStyle","textBaseline","text","textX","Math","round","measureText","textY","fillText","text2","textX2","textY2","save","beforeEvent","event","options","firstPoint","getElementAtEvent","_index","_datasetIndex","lineChartOptions","display","responsive","maintainAspectRatio","tooltips","plugins","datalabels","scales","yAxes","gridLines","lineWidth","color","drawBorder","ticks","beginAtZero","stepSize","min","max","padding","xAxes","polarAreaChartOptions","position","usePointStyle","fontSize","scale","areaChartOptions","scatterChartOptions","barChartOptions","radarChartOptions","pieChartOptions","title","layout","doughnutChartOptions","cutoutPercentage","smallLineChartOptions","left","top","Area","shadow","chartContainer","useRef","useState","setChartInstance","useEffect","current","Chart","defaults","lineWithShadow","line","controllers","extend","draw","ease","prototype","call","this","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","stroke","apply","arguments","context","getContext","newChartInstance","type","ref","Bar","global","barWithShadow","bar","Doughnut","doughnutWithShadow","doughnut","Line","Pie","pieWithShadow","pie","PolarArea","polarWithShadow","polarArea","radar","Radar","radarWithShadow","Scatter","scatterWithShadow","scatter","addCommas","nStr","x1","x2","rgx","test","replace","currentValue","setCurrentValue","currentLabel","setCurrentLabel","changeState","yLabel","xLabel","lineWithLine","tooltip","_active","tooltipPosition","topY","bottomY","beginPath","moveTo","lineTo","strokeStyle","intersect","enabled","custom","tooltipModel","dataPoints","label","body","lines","afterInit","_options","rootStyle","getComputedStyle","document","themeColor1","getPropertyValue","trim","themeColor2","themeColor3","themeColor4","themeColor5","themeColor6","themeColor1_10","themeColor2_10","themeColor3_10","themeColor4_10","themeColor5_10","themeColor6_10","colors","lineChartData","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","fill","polarAreaChartData","areaChartData","scatterChartData","showLine","y","barChartData","radarChartData","pieChartData","doughnutChartData","smallChartData1","align","anchor","smallChartData2","smallChartData3","smallChartData4","conversionChartData","React","memo","percent","isSortable","strokeWidth","value","WebsiteVisitsChartCard","controls","caret","outline","SmallLineCharts","itemClass","xxs"],"mappings":"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","file":"static/js/11.b1b0bd4c.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import { ThemeColors } from '../../helpers/ThemeColors';\n\nexport const chartTooltip = {\n  backgroundColor: ThemeColors().foregroundColor,\n  titleFontColor: ThemeColors().primaryColor,\n  borderColor: ThemeColors().separatorColor,\n  borderWidth: 0.5,\n  bodyFontColor: ThemeColors().primaryColor,\n  bodySpacing: 10,\n  xPadding: 15,\n  yPadding: 15,\n  cornerRadius: 0.15,\n};\n\nexport const centerTextPlugin = {\n  afterDatasetsUpdate(chart) {},\n  beforeDraw(chart) {\n    const width = chart.chartArea.right;\n    const height = chart.chartArea.bottom;\n    const { ctx } = chart.chart;\n    ctx.restore();\n\n    let activeLabel = chart.data.labels[0];\n    let activeValue = chart.data.datasets[0].data[0];\n    let dataset = chart.data.datasets[0];\n    let meta = dataset._meta[Object.keys(dataset._meta)[0]];\n    let { total } = meta;\n\n    let activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n    activePercentage = chart.legend.legendItems[0].hidden\n      ? 0\n      : activePercentage;\n\n    if (chart.pointAvailable) {\n      activeLabel = chart.data.labels[chart.pointIndex];\n      activeValue =\n        chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex];\n\n      dataset = chart.data.datasets[chart.pointDataIndex];\n      meta = dataset._meta[Object.keys(dataset._meta)[0]];\n      total = meta.total;\n      activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n      activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\n        ? 0\n        : activePercentage;\n    }\n\n    ctx.font = '36px Nunito, sans-serif';\n    ctx.fillStyle = ThemeColors().primaryColor;\n    ctx.textBaseline = 'middle';\n\n    const text = `${activePercentage}%`;\n    const textX = Math.round((width - ctx.measureText(text).width) / 2);\n    const textY = height / 2;\n    ctx.fillText(text, textX, textY);\n\n    ctx.font = '14px Nunito, sans-serif';\n    ctx.textBaseline = 'middle';\n\n    const text2 = activeLabel;\n    const textX2 = Math.round((width - ctx.measureText(text2).width) / 2);\n    const textY2 = height / 2 - 30;\n    ctx.fillText(text2, textX2, textY2);\n\n    ctx.save();\n  },\n  beforeEvent(chart, event, options) {\n    const firstPoint = chart.getElementAtEvent(event)[0];\n\n    if (firstPoint) {\n      chart.pointIndex = firstPoint._index;\n      chart.pointDataIndex = firstPoint._datasetIndex;\n      chart.pointAvailable = true;\n    }\n  },\n};\n","import { chartTooltip } from './util';\n\nexport const lineChartOptions = {\n  legend: {\n    display: false,\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 5,\n          min: 50,\n          max: 70,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\nexport const polarAreaChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const areaChartOptions = {\n  legend: {\n    display: false,\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 5,\n          min: 50,\n          max: 70,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\n\nexport const scatterChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 20,\n          min: -80,\n          max: 80,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n\n  // legend: {\n  //   position: 'bottom',\n  //   labels: {\n  //     padding: 30,\n  //     usePointStyle: true,\n  //     fontSize: 12,\n  //   },\n  // },\n  // responsive: true,\n  // maintainAspectRatio: false,\n  // scales: {\n  //   yAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //         drawBorder: false,\n  //       },\n  //       ticks: {\n  //         beginAtZero: true,\n  //         stepSize: 20,\n  //         min: -80,\n  //         max: 80,\n  //         padding: 20,\n  //       },\n  //     },\n  //   ],\n  //   xAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //       },\n  //     },\n  //   ],\n  // },\n};\n\nexport const barChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 100,\n          min: 300,\n          max: 800,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n};\n\nexport const radarChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const pieChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const doughnutChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  cutoutPercentage: 80,\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const smallLineChartOptions = {\n  layout: {\n    padding: {\n      left: 5,\n      right: 5,\n      top: 10,\n      bottom: 10,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n        display: false,\n      },\n    ],\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n  },\n};\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { areaChartOptions } from './config';\n\nconst Area = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.lineWithShadow = Chart.defaults.line;\n        Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\n          draw(ease) {\n            Chart.controllers.line.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            ctx.stroke();\n            Chart.controllers.line.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'lineWithShadow' : 'line',\n        options: areaChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Area;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { barChartOptions } from './config';\n\nconst Bar = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.global.datasets.barWithShadow =\n          Chart.defaults.global.datasets.bar;\n        Chart.defaults.barWithShadow = Chart.defaults.bar;\n        Chart.controllers.barWithShadow = Chart.controllers.bar.extend({\n          draw(ease) {\n            Chart.controllers.bar.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\n            ctx.shadowBlur = 7;\n            ctx.shadowOffsetX = 5;\n            ctx.shadowOffsetY = 7;\n            ctx.responsive = true;\n            Chart.controllers.bar.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'barWithShadow' : 'bar',\n        options: barChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Bar;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { centerTextPlugin } from './util';\nimport { doughnutChartOptions } from './config';\n\nconst Doughnut = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.doughnutWithShadow = Chart.defaults.doughnut;\n        Chart.controllers.doughnutWithShadow = Chart.controllers.doughnut.extend(\n          {\n            draw(ease) {\n              Chart.controllers.doughnut.prototype.draw.call(this, ease);\n              const {\n                chart: { ctx },\n              } = this;\n              ctx.save();\n              ctx.shadowColor = 'rgba(0,0,0,0.15)';\n              ctx.shadowBlur = 10;\n              ctx.shadowOffsetX = 0;\n              ctx.shadowOffsetY = 10;\n              ctx.responsive = true;\n              Chart.controllers.doughnut.prototype.draw.apply(this, arguments);\n              ctx.restore();\n            },\n          }\n        );\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'doughnutWithShadow' : 'doughnut',\n        options: doughnutChartOptions,\n        plugins: [centerTextPlugin],\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Doughnut;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { lineChartOptions } from './config';\n\nconst Line = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.controllers.lineWithShadow = Chart.controllers.line;\n        Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\n          draw(ease) {\n            Chart.controllers.line.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            ctx.stroke();\n            Chart.controllers.line.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'lineWithShadow' : 'line',\n        options: lineChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Line;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { pieChartOptions } from './config';\n\nconst Pie = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.pieWithShadow = Chart.defaults.pie;\n        Chart.controllers.pieWithShadow = Chart.controllers.pie.extend({\n          draw(ease) {\n            Chart.controllers.pie.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            Chart.controllers.pie.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'pieWithShadow' : 'pie',\n        options: pieChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Pie;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { polarAreaChartOptions } from './config';\n\nconst PolarArea = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.polarWithShadow = Chart.defaults.polarArea;\n        Chart.controllers.polarWithShadow = Chart.controllers.polarArea.extend({\n          draw(ease) {\n            Chart.controllers.radar.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\n            ctx.shadowBlur = 7;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 7;\n            ctx.responsive = true;\n            Chart.controllers.radar.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'polarWithShadow' : 'polarArea',\n        options: polarAreaChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default PolarArea;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { radarChartOptions } from './config';\n\nconst Radar = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.radarWithShadow = Chart.defaults.radar;\n        Chart.controllers.radarWithShadow = Chart.controllers.radar.extend({\n          draw(ease) {\n            Chart.controllers.radar.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\n            ctx.shadowBlur = 7;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 7;\n            ctx.responsive = true;\n            Chart.controllers.radar.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'radarWithShadow' : 'radar',\n        options: radarChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Radar;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { scatterChartOptions } from './config';\n\nconst Scatter = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.scatterWithShadow = Chart.defaults.scatter;\n        Chart.controllers.scatterWithShadow = Chart.controllers.scatter.extend({\n          draw(ease) {\n            Chart.controllers.scatter.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\n            ctx.shadowBlur = 7;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 7;\n            ctx.responsive = true;\n            Chart.controllers.scatter.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'scatterWithShadow' : 'scatter',\n        options: scatterChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Scatter;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { smallLineChartOptions } from './config';\n\nconst addCommas = (nStr) => {\n  nStr += '';\n  const x = nStr.split('.');\n  let x1 = x[0];\n  const x2 = x.length > 1 ? `.${x[1]}` : '';\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1,$2');\n  }\n  return x1 + x2;\n};\n\nconst Scatter = ({ data }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n  const [currentValue, setCurrentValue] = useState('');\n  const [currentLabel, setCurrentLabel] = useState('');\n\n  const changeState = (yLabel, xLabel) => {\n    setCurrentValue(yLabel);\n    setCurrentLabel(xLabel);\n  };\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      Chart.controllers.lineWithLine = Chart.controllers.line;\n      Chart.controllers.lineWithLine = Chart.controllers.line.extend({\n        draw(ease) {\n          Chart.controllers.line.prototype.draw.call(this, ease);\n          const {\n            chart: { ctx, tooltip, scales },\n          } = this;\n\n          if (tooltip._active && tooltip._active[0]) {\n            const activePoint = tooltip._active[0];\n            const { x } = activePoint.tooltipPosition();\n            const topY = scales['y-axis-0'].top;\n            const bottomY = scales['y-axis-0'].bottom;\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(x, topY);\n            ctx.lineTo(x, bottomY);\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = 'rgba(0,0,0,0.1)';\n            ctx.stroke();\n            ctx.restore();\n          }\n        },\n      });\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: 'lineWithLine',\n        options: {\n          ...smallLineChartOptions,\n          tooltips: {\n            intersect: false,\n            enabled: false,\n            custom(tooltipModel) {\n              if (tooltipModel && tooltipModel.dataPoints) {\n                const { yLabel } = tooltipModel.dataPoints[0];\n                const { xLabel } = tooltipModel.dataPoints[0];\n                const label = tooltipModel.body[0].lines[0].split(':')[0];\n                changeState(`$${addCommas(yLabel)}`, `${label}-${xLabel}`);\n              }\n            },\n          },\n        },\n        plugins: [\n          {\n            afterInit(chart, _options) {\n              const yLabel = chart.data.datasets[0].data[0];\n              const xLabel = chart.data.labels[0];\n              const { label } = chart.data.datasets[0];\n              changeState(`$${addCommas(yLabel)}`, `${label}-${xLabel}`);\n            },\n          },\n        ],\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data]);\n\n  return (\n    <>\n      <div>\n        <p className=\"lead color-theme-1 mb-1 value\">{currentValue}</p>\n        <p className=\"mb-0 label text-small\">{currentLabel}</p>\n      </div>\n      <div className=\"chart\">\n        <canvas ref={chartContainer} />\n      </div>\n    </>\n  );\n};\n\nexport default Scatter;\n","export const ThemeColors = () => {\n  const rootStyle = getComputedStyle(document.body);\n  return {\n    themeColor1: rootStyle.getPropertyValue('--theme-color-1').trim(),\n    themeColor2: rootStyle.getPropertyValue('--theme-color-2').trim(),\n    themeColor3: rootStyle.getPropertyValue('--theme-color-3').trim(),\n    themeColor4: rootStyle.getPropertyValue('--theme-color-4').trim(),\n    themeColor5: rootStyle.getPropertyValue('--theme-color-5').trim(),\n    themeColor6: rootStyle.getPropertyValue('--theme-color-6').trim(),\n    themeColor1_10: rootStyle.getPropertyValue('--theme-color-1-10').trim(),\n    themeColor2_10: rootStyle.getPropertyValue('--theme-color-2-10').trim(),\n    themeColor3_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor4_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor5_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor6_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    primaryColor: rootStyle.getPropertyValue('--primary-color').trim(),\n    foregroundColor: rootStyle.getPropertyValue('--foreground-color').trim(),\n    separatorColor: rootStyle.getPropertyValue('--separator-color').trim(),\n  };\n};\n","import { ThemeColors } from '../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\nexport const lineChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [54, 63, 60, 65, 60, 68, 60],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n  ],\n};\n\nexport const polarAreaChartData = {\n  labels: ['Sales', 'Orders', 'Stock'],\n  datasets: [\n    {\n      data: [80, 90, 70],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n      ],\n    },\n  ],\n};\n\nexport const areaChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [54, 63, 60, 65, 60, 68, 60],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 4,\n      pointBorderWidth: 2,\n      pointHoverRadius: 5,\n      fill: true,\n      borderWidth: 2,\n      backgroundColor: colors.themeColor1_10,\n    },\n  ],\n};\n\nexport const scatterChartData = {\n  datasets: [\n    {\n      borderWidth: 2,\n      showLine: false,\n      label: 'Cakes',\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [\n        { x: 62, y: -78 },\n        { x: -0, y: 74 },\n        { x: -67, y: 45 },\n        { x: -26, y: -43 },\n        { x: -15, y: -30 },\n        { x: 65, y: -68 },\n        { x: -28, y: -61 },\n      ],\n    },\n    {\n      borderWidth: 2,\n      showLine: false,\n      label: 'Desserts',\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [\n        { x: 79, y: 62 },\n        { x: 62, y: 0 },\n        { x: -76, y: -81 },\n        { x: -51, y: 41 },\n        { x: -9, y: 9 },\n        { x: 72, y: -37 },\n        { x: 62, y: -26 },\n      ],\n    },\n  ],\n};\n\nexport const barChartData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n  datasets: [\n    {\n      label: 'Cakes',\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [456, 479, 324, 569, 702, 600],\n      borderWidth: 2,\n    },\n    {\n      label: 'Desserts',\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [364, 504, 605, 400, 345, 320],\n      borderWidth: 2,\n    },\n  ],\n};\n\nexport const radarChartData = {\n  datasets: [\n    {\n      label: 'Stock',\n      borderWidth: 2,\n      pointBackgroundColor: colors.themeColor1,\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [80, 90, 70],\n    },\n    {\n      label: 'Order',\n      borderWidth: 2,\n      pointBackgroundColor: colors.themeColor2,\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [68, 80, 95],\n    },\n  ],\n  labels: ['Cakes', 'Desserts', 'Cupcakes'],\n};\n\nexport const pieChartData = {\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n      ],\n      borderWidth: 2,\n      data: [15, 25, 20],\n    },\n  ],\n};\n\nexport const doughnutChartData = {\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [colors.themeColor3, colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n        colors.themeColor1_10,\n      ],\n      borderWidth: 2,\n      data: [15, 25, 20],\n    },\n  ],\n};\n\nexport const smallChartData1 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [1250, 1300, 1550, 921, 1810, 1106, 1610],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData2 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Pending Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [115, 120, 300, 222, 105, 85, 36],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData3 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [350, 452, 762, 952, 630, 85, 158],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData4 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [200, 452, 250, 630, 125, 85, 20],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const conversionChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [65, 60, 68, 60, 58, 63, 60],\n      borderColor: colors.themeColor2,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor2,\n      pointHoverBackgroundColor: colors.themeColor2,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 4,\n      pointBorderWidth: 2,\n      pointHoverRadius: 5,\n      fill: true,\n      borderWidth: 2,\n      backgroundColor: colors.themeColor2_10,\n    },\n  ],\n};\n","import React from 'react';\nimport { Card, CardBody, CardTitle, CardHeader } from 'reactstrap';\nimport { CircularProgressbar } from 'react-circular-progressbar';\n\nconst RadialProgressCard = ({\n  title = 'title',\n  percent = 50,\n  isSortable = false,\n}) => {\n  return (\n    <Card>\n      {isSortable && (\n        <CardHeader className=\"p-0 position-relative\">\n          <div className=\"position-absolute handle card-icon\">\n            <i className=\"simple-icon-shuffle\" />\n          </div>\n        </CardHeader>\n      )}\n      <CardBody className=\"d-flex justify-content-between align-items-center\">\n        <CardTitle className=\"mb-0\">{title}</CardTitle>\n        <div className=\"progress-bar-circle\">\n          <CircularProgressbar\n            strokeWidth={4}\n            value={percent}\n            text={`${percent}%`}\n          />\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\nexport default React.memo(RadialProgressCard);\n","import React from 'react';\nimport {\n  Card,\n  CardBody,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu,\n} from 'reactstrap';\n\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { AreaChart } from '../../components/charts';\n\nimport { areaChartData } from '../../data/charts';\n\nconst WebsiteVisitsChartCard = ({ className = '', controls = true }) => {\n  return (\n    <Card className={`${className} dashboard-filled-line-chart`}>\n      <CardBody>\n        <div className=\"float-left float-none-xs\">\n          <div className=\"d-inline-block\">\n            <h5 className=\"d-inline\">\n              <IntlMessages id=\"dashboards.website-visits\" />\n            </h5>\n            <span className=\"text-muted text-small d-block\">\n              <IntlMessages id=\"dashboards.unique-visitors\" />\n            </span>\n          </div>\n        </div>\n        {controls && (\n          <div className=\"btn-group float-right float-none-xs mt-2\">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboards.this-week\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboards.last-week\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboards.this-month\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n      </CardBody>\n\n      <div className=\"chart card-body pt-0\">\n        <AreaChart shadow data={areaChartData} />\n      </div>\n    </Card>\n  );\n};\n\nexport default WebsiteVisitsChartCard;\n","import React from 'react';\nimport { Row, Card, CardBody } from 'reactstrap';\n\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport { SmallLineChart } from '../../components/charts';\n\nimport {\n  smallChartData1,\n  smallChartData2,\n  smallChartData3,\n  smallChartData4,\n} from '../../data/charts';\n\nconst SmallLineCharts = ({ itemClass = 'dashboard-small-chart' }) => {\n  return (\n    <Row>\n      <Colxx xxs=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <SmallLineChart data={smallChartData1} />\n          </CardBody>\n        </Card>\n      </Colxx>\n      <Colxx xxs=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <SmallLineChart data={smallChartData2} />\n          </CardBody>\n        </Card>\n      </Colxx>\n      <Colxx xxs=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <SmallLineChart data={smallChartData3} />\n          </CardBody>\n        </Card>\n      </Colxx>\n      <Colxx xxs=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <SmallLineChart data={smallChartData4} />\n          </CardBody>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default SmallLineCharts;\n"],"sourceRoot":""}