{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","../../src/Path.tsx","../../src/CircularProgressbar.tsx","../../src/constants.ts","views/app/blanco/blanco-reporte.js"],"names":["propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardBody","CardHeader","Path","counterClockwise","dashRatio","pathRadius","strokeWidth","style","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","React.Component","getBackgroundPadding","this","background","backgroundPadding","getPathRadius","getPathRatio","value","minValue","maxValue","min","max","render","circleRatio","styles","text","pathRatio","root","viewBox","cx","cy","r","trail","path","x","y","injectIntl","match","messages","intl","xxs","id","caret","size","header","disabled","divider","lg","md","title","percent","isSortable","itemClass","controls"],"mappings":"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","file":"static/js/blanco-blanco-reporte.05f4cf6e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import React from 'react';\nimport {\n  Row,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport IntlMessages from '../../../helpers/IntlMessages';\nimport RadialProgressCard from '../../../components/cards/RadialProgressCard';\nimport SmallLineCharts from '../../../containers/dashboards/SmallLineCharts';\nimport WebsiteVisitsChartCard from '../../../containers/dashboards/WebsiteVisitsChartCard';\n\nconst ReportePages = ({ match, intl }) => {\n\n  const { messages } = intl;\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <h1><IntlMessages id=\"menu.blanco-reporte\" /></h1>\n          <div className=\"text-zero top-right-button-container\">\n            <UncontrolledDropdown>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                size=\"lg\"\n                outline\n                className=\"top-right-button top-right-button-single mb-2\"\n              >\n                <IntlMessages id=\"pages.actions\" />\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>\n                  <IntlMessages id=\"pages.header\" />\n                </DropdownItem>\n                <DropdownItem disabled>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n\n          <Breadcrumb match={match} />\n          <Separator className=\"mb-5\" />\n\n          <Row>\n                <Colxx xxs=\"12\" lg=\"12\" className=\"mb-4\">\n                  <Row>\n                    <Colxx xxs=\"12\" md=\"4\" className=\"mb-4\">\n                      <RadialProgressCard\n                        className=\"mb-4\"\n                        title={messages['pages.order-status']}\n                        percent={85}\n                        isSortable={false}\n                      />\n                    </Colxx>\n                    <Colxx xxs=\"12\" md=\"4\" className=\"mb-4\">\n                      <RadialProgressCard\n                        className=\"mb-4\"\n                        title={messages['pages.order-status']}\n                        percent={40}\n                        isSortable={false}\n                      />\n                    </Colxx>\n                    <Colxx xxs=\"12\" md=\"4\" className=\"mb-4\">\n                      <RadialProgressCard\n                        className=\"mb-4\"\n                        title={messages['pages.order-status']}\n                        percent={85}\n                        isSortable={false}\n                      />\n                    </Colxx>\n                  </Row>\n                  <SmallLineCharts itemClass=\"dashboard-small-chart-analytics\" />\n                </Colxx>\n\n                <Colxx xxs=\"12\" lg=\"12\">\n                  <WebsiteVisitsChartCard className=\"mb-4\" controls={false} />\n                </Colxx>\n              </Row>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default injectIntl(ReportePages);"],"sourceRoot":""}