{"version":3,"sources":["containers/navs/Breadcrumb.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","components/common/CustomSelectInput.js","hooks/use-mousetrap.js","containers/modals/blanco/AddNewModal.js","containers/blanco/ListPageHeading.js","containers/blanco/Pagination.js","containers/blanco/ContextMenuContainer.js","containers/blanco/DataListView.js","containers/blanco/ImageListView.js","containers/blanco/ThumbListView.js","containers/blanco/ListPageListing.js","views/app/blanco/image-list.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","className","map","key","active","to","BreadcrumbContainer","heading","propTypes","tag","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","children","node","Breadcrumb","props","Tag","ListTag","label","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","defaultProps","bool","BreadcrumbItem","undefined","CustomSelectInput","customProps","autoCorrect","autoCapitalize","Input","handlerKey","handlerCallback","actionRef","useRef","current","useEffect","mousetrap","bind","evt","combo","preventDefault","unbind","AddNewModal","modalOpen","toggleModal","categories","isOpen","toggle","wrapClassName","backdrop","components","classNamePrefix","name","options","type","color","outline","onClick","injectIntl","intl","displayMode","changeDisplayMode","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","endIndex","onSearchKey","orderOptions","pageSizes","useState","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","xxs","size","href","caret","order","column","placeholder","onKeyPress","e","right","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","Nav","NavItem","NavLink","ContextMenuContainer","onContextMenu","onContextMenuClick","onShow","detail","data","action","memo","product","isSelect","collect","onCheckItem","Card","event","classnames","Badge","statusColor","pill","sm","lg","xl","CardImg","top","alt","title","src","img","status","CardBody","Row","CustomInput","checked","onChange","CardSubtitle","CardText","date","category","items","selectedItems","includes","getIndex","value","arr","prop","apiUrl","servicePath","ImageListPages","isLoaded","setIsLoaded","setDisplayMode","setCurrentPage","setSelectedPageSize","setSelectedOrderOption","setModalOpen","setTotalItemCount","setTotalPage","search","setSearch","setSelectedItems","setItems","lastChecked","setLastChecked","a","axios","get","then","res","replace","totalItem","fetchData","handleChangeSelectAll","isToggle","document","activeElement","blur","useMousetrap","find","selectedItemsLength","itemsLength","target","toLowerCase","tagName","parentElement","selectedList","shiftKey","newItems","start","end","slice","Math","min","max","item","Array","from","Set","console","log","clickedProductId"],"mappings":"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","file":"static/js/blanco-image-list.2078a878.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React from 'react';\nimport {\n  CustomInput,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport IntlMessages from '../../../helpers/IntlMessages';\n\nconst AddNewModal = ({ modalOpen, toggleModal, categories }) => {\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"blanco.add-new-modal-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label>\n          <IntlMessages id=\"blanco.product-name\" />\n        </Label>\n        <Input />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"blanco.category\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={categories}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"blanco.description\" />\n        </Label>\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"blanco.status\" />\n        </Label>\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio\"\n          name=\"customRadio\"\n          label=\"ON HOLD\"\n        />\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio2\"\n          name=\"customRadio\"\n          label=\"PROCESSED\"\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"blanco.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={toggleModal}>\n          <IntlMessages id=\"blanco.submit\" />\n        </Button>{' '}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddNewModal;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Collapse,\n} from 'reactstrap';\n// import { NavLink } from 'react-router-dom';\n// import { adminRoot } from '../../constants/defaultValues';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../navs/Breadcrumb';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nimport {\n  DataListIcon,\n  ThumbListIcon,\n  ImageListIcon,\n} from '../../components/svg';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  toggleModal,\n  heading,\n}) => {\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n\n          <div className=\"text-zero top-right-button-container\">\n            {/* <NavLink to={`${adminRoot}/blanco/blanco-list-two`}>\n              <Button\n                color=\"light\"\n                size=\"md\"\n                className=\"top-right-button mr-2\"\n              >\n                <IntlMessages id=\"pages.add-new\" />\n              </Button>\n              {'  '} \n            </NavLink> */}\n            <Button\n              color=\"primary\"\n              size=\"md\"\n              className=\"top-right-button\"\n              onClick={() => toggleModal()}\n            >\n              <IntlMessages id=\"pages.add-new\" />\n            </Button>\n            {'  '}   \n          </div>\n          <Breadcrumb match={match} />\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'list' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('list')}\n              >\n                <DataListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  <IntlMessages id=\"pages.orderby\" />\n                  {selectedOrderOption.label}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {orderOptions.map((order, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changeOrderBy(order.column)}\n                      >\n                        {order.label}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                <input\n                  type=\"text\"\n                  name=\"keyword\"\n                  id=\"search\"\n                  placeholder={messages['menu.search']}\n                  onKeyPress={(e) => onSearchKey(e)}\n                />\n              </div>\n            </div>\n            <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\n\nconst ContextMenuContainer = ({ onContextMenu, onContextMenuClick }) => {\n  return (\n    <ContextMenu id=\"menu_id\" onShow={(e) => onContextMenu(e, e.detail.data)}>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'copy' }}>\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'move' }}>\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'delete' }}>\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\n      </MenuItem>\n    </ContextMenu>\n  );\n};\n\nexport default ContextMenuContainer;\n","import React from 'react';\nimport { Card, Badge, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport { adminRoot } from '../../constants/defaultValues';\nimport IntlMessages from '../../helpers/IntlMessages';\n\n\nconst DataListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`${adminRoot}/blanco/blanco-ver/${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  \n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {/*product.documento*/}                \n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {/*product.date*/}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {/*product.status*/}\n                </Badge>\n              </div>\n\n              {/*<NavLink to={`${adminRoot}/blanco/blanco-ver/${product.id}`} className=\"w-sm-100\">\n                <Button outline color=\"info\" size=\"xs\" className=\"mb-2\">\n                  <i className=\"simple-icon-eye\"/>\n                  <IntlMessages id=\"menu.blanco-ver\" />\n                </Button>{' '}\n        </NavLink> */}\n              \n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(DataListView);\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ThumbListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <NavLink to={`?p=${product.id}`} className=\"d-flex\">\n            <img\n              alt={product.title}\n              src={product.img}\n              className=\"list-thumbnail responsive border-0 card-img-left\"\n            />\n          </NavLink>\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ThumbListView);\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport Pagination from './Pagination';\nimport ContextMenuContainer from './ContextMenuContainer';\nimport DataListView from './DataListView';\nimport ImageListView from './ImageListView';\nimport ThumbListView from './ThumbListView';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  return (\n    <Row>\n      {items.map((product) => {\n        if (displayMode === 'imagelist') {\n          return (\n            <ImageListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        if (displayMode === 'thumblist') {\n          return (\n            <ThumbListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        return (\n          <DataListView\n            key={product.id}\n            product={product}\n            isSelect={selectedItems.includes(product.id)}\n            onCheckItem={onCheckItem}\n            collect={collect}\n          />\n        );\n      })}\n      <Pagination\n        currentPage={currentPage}\n        totalPage={totalPage}\n        onChangePage={(i) => onChangePage(i)}\n      />\n      <ContextMenuContainer\n        onContextMenuClick={onContextMenuClick}\n        onContextMenu={onContextMenu}\n      />\n    </Row>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport { servicePath } from '../../../constants/defaultValues';\n\nimport ListPageHeading from '../../../containers/blanco/ListPageHeading';\nimport AddNewModal from '../../../containers/modals/blanco/AddNewModal';\nimport ListPageListing from '../../../containers/blanco/ListPageListing';\nimport useMousetrap from '../../../hooks/use-mousetrap';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst apiUrl = `${servicePath}/cakes/paging`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [4, 8, 12, 20];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\n\nconst ImageListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('imagelist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(8);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    async function fetchData() {\n      axios\n        .get(\n          `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\n        )\n        .then((res) => {\n          return res.data;\n        })\n        .then((data) => {\n          setTotalPage(data.totalPage);\n          setItems(data.data.map(x=>{ return { ...x,img : x.img.replace(\"img/\",\"img/products/\")}}));\n          setSelectedItems([]);\n          setTotalItemCount(data.totalItem);\n          setIsLoaded(true);\n        });\n    }\n    fetchData();\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"menu.image-list\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n        />\n        <AddNewModal\n          modalOpen={modalOpen}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          categories={categories}\n        />\n        <ListPageListing\n          items={items}\n          displayMode={displayMode}\n          selectedItems={selectedItems}\n          onCheckItem={onCheckItem}\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n          onChangePage={setCurrentPage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ImageListPages;\n"],"sourceRoot":""}